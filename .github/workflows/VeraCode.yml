name: Afrika Universal Veracode CI/CD

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  universal-linux:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/YOUR_ORG/afrika-universal:latest

    outputs:
      stack: ${{ steps.detect.outputs.stack }}

    steps:
      - uses: actions/checkout@v4

      - name: Detect Stack
        id: detect
        run: chmod +x .github/Afrika/scripts/detect-stack.sh && .github/Afrika/scripts/detect-stack.sh

      - name: Build Universal
        run: chmod +x .github/Afrika/scripts/build-universal.sh && .github/Afrika/scripts/build-universal.sh ${{ steps.detect.outputs.stack }} ${{ steps.detect.outputs.path }}

      - name: Veracode SCA (SourceClear)
        env:
          SRCCLR_API_TOKEN: ${{ secrets.SCA }}
        run: |
          curl -sSL 'https://download.sourceclear.com/ci.sh' | bash -s -- scan

      - name: Veracode Pipeline Scan
        uses: veracode/Veracode-pipeline-scan-action@0.3.3
        with:
          vid: ${{ secrets.VID }}
          vkey: ${{ secrets.VKEY }}
          file: '**/*.zip'
          fail_build: true

      - name: Veracode Upload And Scan
        uses: veracode/veracode-uploadandscan-action@0.2.8
        with:
          appname: 'AfrikaUniversalApp'
          filepath: '**/*.zip'
          vid: ${{ secrets.VID }}
          vkey: ${{ secrets.VKEY }}

  universal-mac:
    runs-on: macos-latest
    needs: universal-linux
    if: contains(needs.universal-linux.outputs.stack, 'swift') || contains(needs.universal-linux.outputs.stack, 'obj-c') || contains(needs.universal-linux.outputs.stack, 'dart')
    steps:
      - uses: actions/checkout@v4
      - run: echo "⚙️ Compilar Swift/iOS/Dart → Xcodebuild ou Flutter aqui"

  universal-windows:
    runs-on: windows-latest
    needs: universal-linux
    if: contains(needs.universal-linux.outputs.stack, 'classic-asp')
    steps:
      - uses: actions/checkout@v4
      - run: echo "⚙️ Build Classic ASP ou .NET Framework no Windows"
